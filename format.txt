Instruction Format
==================

32 instructions that takes an immediate value
16 registers

     f e d c b a 9 8 7 6 5 4 3 2 1 0 f e d c b a 9 8 7 6 5 4 3 2 1 0
    +-------+-------+-------+-------+-------------------------------+
    | op(4) | rd(4) | rs(4) | fn(4) |          offset(16)           |
    +-------+-------+-------+-------+-------------------------------+

Naming Rule
-----------

     f e d c b a 9 8 7 6 5 4 3 2 1 0 f e d c b a 9 8 7 6 5 4 3 2 1 0
    +-------+-------+-------+-------+-
    |  opc  | rd(4) | rs(4) |F|I|SEL|
    +-------+-------+-------+-------+-

F: floating point instructions
I: immediate instructions
SEL: Memory access/register access/branch instructions
    00: PC
    01: register
    10: memory
    11: register

opc = inst[31:28];
dst = inst[27:24];
src = inst[23:20];
float = inst[19];
sel_src = inst[18];
sel_dst = inst[17:16];
imm = inst[15:0];
we = (sel_dst == 2b'10) && (&opcode[1:0])

0000 
0001
0010
0011
0100
0101
0110
0111
1000
1001
1010
1011
1100
1101
1110
1111

### branch (16 instructions)
    +-------+-------+-------+-------+-
    | opc   |       |       |0|0|0|0|
    +-------+-------+-------+-------+-

    +-------+-------+-------+-------+-
    | opc   |       |       |0|0|1|0|
    +-------+-------+-------+-------+-

b, beq, bne, bge, ble, bgt, blt

### arigh, logic, shift(32 instructions)
    +-------+-------+-------+-------+-
    | opc   | rd(4) | rs(4) |  fn   |
    +-------+-------+-------+-------+-

    +-------+-------+-------+-------+-
    | opc   | rd(4) | rs(4) |  fn   |
    +-------+-------+-------+-------+-

    opc		rd	rs

add32, add16, add8, sub32 sub16, sub8, mul32, mul16, mul8, div32, mod32

### memory access (16 instructions)

    +-------+-------+-------+-------+-
    | opc   | rd(4) | rs(4) |0|0|1|0|
    +-------+-------+-------+-------+-

mov32, mov16, mov8


