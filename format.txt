Instruction Format
==================

32 instructions that takes an immediate value
16 registers

     f e d c b a 9 8 7 6 5 4 3 2 1 0 f e d c b a 9 8 7 6 5 4 3 2 1 0
    +---------+-------+-------+-----+-------------------------------+
    |   op(5) | rd(4) | rs(4) |fn(3)|          offset(16)           |
    +---------+-------+-------+-----+-------------------------------+

Naming Rule
-----------

## Memo

     f e d c b a 9 8 7 6 5 4 3 2 1 0 f e d c b a 9 8 7 6 5 4 3 2 1 0
    +-------+-------+-------+-------+-
    |  opc  | rd(4) | rs(4) |F|I|SEL|
    +-------+-------+-------+-------+-

F: floating point instructions
I: immediate instructions
SEL: Memory access/register access/branch instructions
    00: PC
    01: register
    10: memory
    11: register

opcode = inst[31:28];
dst_reg = inst[27:24];
src_reg = inst[23:20];
float = inst[19];
dst_sel = inst[17:16];
imm_sel = inst[18];
imm = inst[15:0];
we = (dst_sel == 0x2) && (&opcode[1:0])

    +---------+-------+-------+-----+-
    |F|I|M|R| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-

    selecter_dst = inst[29:28];
    selecter_imm = inst[30];
    we =
    imm = inst[15:0];
    dst_reg = inst[26:23];
    src_reg = inst[22:19];
    opc = inst[18:16];

### branch (16 instructions)
    +---------+-------+-------+-----+-
    |0|0|0|0| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-

    +---------+-------+-------+-----+-
    |0|0|1|0| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-
    opc		rs

b, beq, bne, bge, ble, bgt, blt

### arigh, logic, shift(32 instructions)
    +---------+-------+-------+-----+-
    |0|0|0|1| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-

    +---------+-------+-------+-----+-
    |0|0|1|1| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-

    opc		rd	rs

add32, add16, add8, sub32 sub16, sub8, mul32, mul16, mul8, div32, mod32

### memory access (16 instructions)

    +---------+-------+-------+-----+-
    |0|0|1|0| | rd(4) | rs(4) |  fn |
    +---------+-------+-------+-----+-

mov32, mov16, mov8


